---
title: "Cervical Cancer Risk Prediction"
subtitle: "INFO 523 - Summer 2025 - Final Project"
author: "Team Okhawere"
title-slide-attributes:
  data-background-image: images/Cervical CA Image.png
  data-background-size: contain
  data-background-position: "100% 50%"
  data-background-opacity: "0.9"
  data-slide-number: none
format:
  revealjs: 
     theme:  ['data/customtheming.scss']
     footer: "INFO 523 Final Project | Kennedy"
     transition: fade
     slide-number: true
     autoSlide: 0
editor: visual
jupyter: python3
execute:
  echo: false
---

```{python}
#| label: setup
#| include: false
#| 
import numpy as np, pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

sns.set_theme(style="white")
```

## Introduction

-   Cervical cancer is preventable but persists where vaccination/screening access is limited
-   We evaluated whether non-invasive history (demographics, sexual/reproductive history, contraception, smoking, STDs) can triage patients at higher risk of biopsy-positive disease

## Research Questions

-   Can we accurately predict cervical cancer biopsy outcomes using only non-invasive risk factors and lifestyle history?
-   Which factor contribute the most to cervical cancer risk?

## Data

-   The dataset was collected at 'Hospital Universitario de Caracas' in Caracas, Venezuela.

```{python}
#| label: load-data
#| message: false

data = pd.read_csv("data/risk_factors_cervical_cancer.csv", na_values="?")

N = data.shape[0]
prev = data["Biopsy"].mean() if "Biopsy" in data.columns else np.nan

print(f"Rows: {N:,}  |  Positives (Biopsy=1): {prev:.1%}")

plt.figure(figsize=(8, 6))
sns.countplot(x='Biopsy', data=data, hue = 'Biopsy')
plt.title('Distribution of the Biopsy in the Cohort')
plt.xlabel('Biopsy Result (0: No, 1: Yes)')
plt.ylabel('Count')
plt.show()

```

# Data Cleaning

* **Handling Duplicates**: 23 participants deleted

* **Dropped Columns**: 18 columns dropped due to potential data leakage, high correlation and extremely rare events

* **Handling Systematic Missingness**: Imputed missing rows and columns based on column proxies

* **Feature Engineering**: Years since first intercourse, any history of condylomatosis

# Modeling

## Modeling Approach

1.  **Preprocessing**: Numerical features were imputed with the median and scaled. Categorical features were one-hot encoded.

2.  **Class Imbalance**: **SMOTE** was applied to the training data to deal with class imbalance.

3.  **Evaluation**: A stratified **train(60%)/validation(20%)/test split(20%)** was used to ensure an unbiased evaluation of the final model.

4.  **Models:** Logistics Regression, Random Forests, XGboost

## Baseline Model - Reported CV means (Average Precision)

```{python}

baseline_cv = {
    "Logistic Regression": (0.0855, 0.0515),
    "Random Forest": (0.1096, 0.0611),
    "XGboost": (0.119, 0.0581),
}

names = list(baseline_cv.keys())
means = [baseline_cv[k][0] for k in names]
errs  = [baseline_cv[k][1] for k in names]

ax = sns.barplot(x=names, y=means)
ax.errorbar(x=np.arange(len(names)), y=means, yerr=errs, fmt="none", capsize=4, color="black")
plt.ylabel("Mean Average Precision (CV)")
plt.title("Baseline Model Comparison (Train CV)")
plt.tight_layout()
plt.show()
```

## Validation Leaderbaord (Average Precision)

```{python}

val_ap = {
    "Logistic Regression": 0.1196,
    "Random Forest":  0.0953,
    "XGboost": 0.0921,
}

ax = sns.barplot(x=list(val_ap.keys()), y=list(val_ap.values()))
plt.ylabel("Average Precision (Validation)")
plt.title("Validation Leaderboard (higher is better)") 
plt.tight_layout()
plt.show()

```

## Test Evaluation (Logistic Regression Model)

```{python}
# Test data
test_metrics = {
    "PR-AUC": 0.145,
    "ROC-AUC": 0.629,
    "Accuracy": 0.784,
    "Precision_Pos": 0.121,
    "Recall_Pos": 0.364,
    "F1_Pos": 0.182,
    "Specificity": 0.814,
    "Confusion": {"TN": 127, "FP": 29, "FN": 7, "TP": 4},
    "Support": {"neg": 156, "pos": 11}
}

cm = test_metrics["Confusion"]

# Reshape the confusion matrix data into a 2x2 grid
cm_matrix = np.array([
    [cm['TP'], cm['FN']],
    [cm['FP'], cm['TN']]
])

# Create the heatmap
plt.figure(figsize=(6, 5))
sns.heatmap(
    cm_matrix, 
    annot=True, 
    fmt="d", 
    cmap="YlGnBu",
    xticklabels=["Positive", "Negative"],
    yticklabels=["Positive", "Negative"]
)
plt.ylabel("Predicted")
plt.xlabel("Actual")
plt.title("Confusion Matrix")
plt.show()



print(f"\nPR-AUC: {test_metrics['PR-AUC']:.3f} | ROC-AUC: {test_metrics['ROC-AUC']:.3f}")
print(f"Recall (Sens): {test_metrics['Recall_Pos']:.3f} | Specificity: {test_metrics['Specificity']:.3f}")
print(f"Precision (PPV): {test_metrics['Precision_Pos']:.3f} | Accuracy: {test_metrics['Accuracy']:.3f}")
```

## Feature Importance (SHAP Analysis)

:::: columns
::: {.column width="60%"}
-   Hormonal Contraceptives (years) was the strongest driver.
-   STDs: Number of diagnoses.
-   Longer years since first intercourse
-   Age: older age trends up.
-   Recent STD :Time since last diagnosis.
-   Number of pregnancies increase the risk
:::
::::

# Conclusion

-   The model is not a definitive diagnostic tool but rather a triage aid to prioritize patients for further screening
-   **Future Work:**
    -   The model's performance could be improved with a larger, more balanced dataset
    -   Theoretical and biologically plausible clinical features, like HPV genotype or cytology, can lift the signal
    -   Additional feature engineering and domain expertise could further enhance predictive power

## Limitations

-   Lack of Generalizability
-   Modest Sensitivity (Recall)
-   Moderate Predictive Power
-   Data Imbalance: Despite using SMOTE
-   Limited Feature Set

## Thank You!